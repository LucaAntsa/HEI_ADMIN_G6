name: CI_Preprod_Groupe6

on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"
  workflow_dispatch:
  schedule:
    - cron: "0 3,11,19 * * *"

env:
  INSTATUS_API_URL: https://api.instatus.com/v3
  INSTATUS_PAGE_ID: ${{ secrets.INSTATUS_PAGE_ID }}
  INSTATUS_API_KEY: ${{ secrets.INSTATUS_API_KEY }}
  #EMAIL
  MANAGER1_EMAIL: ${{ secrets.MANAGER1_EMAIL }}
  MONITOR1_EMAIL: ${{ secrets.MONITOR1_EMAIL }}
  TEACHER1_EMAIL: ${{ secrets.TEACHER1_EMAIL }}
  ADMIN1_EMAIL: ${{ secrets.ADMIN1_EMAIL }}
  STUDENT1_EMAIL: ${{ secrets.STUDENT1_EMAIL }}
  #Commande
  REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL }}
  REACT_APP_AWS_REGION: eu-west-3
  STUDENT1_PASSWORD: ${{ secrets.STUDENT1_PASSWORD }}
  TEACHER1_PASSWORD: ${{ secrets.TEACHER1_PASSWORD }}
  MANAGER1_PASSWORD: ${{ secrets.MANAGER1_PASSWORD }}
  MONITOR1_PASSWORD: ${{ secrets.MONITOR1_PASSWORD }}
  REACT_APP_USERPOOL_ID: ${{ vars.PREPROD_USERPOOL_ID }}
  REACT_APP_WEBCLIENT_ID: ${{ vars.PREPROD_WEBCLIENT_ID }}
  REACT_APP_OAUTH_DOMAIN: ${{ vars.PREPROD_OAUTH_DOMAIN }}
  WAF_JS_API_URL: ${{ secrets.WAF_JS_API_URL }}
  WAF_INTEGRATION_API_KEY: ${{ secrets.WAF_INTEGRATION_API_KEY }}
  REACT_APP_CASDOOR_SDK_SERVER_URL: ${{ secrets.REACT_APP_CASDOOR_SDK_SERVER_URL }}
  REACT_APP_CASDOOR_SDK_CLIENT_ID: ${{ secrets.REACT_APP_CASDOOR_SDK_CLIENT_ID }}
  REACT_APP_CASDOOR_SDK_APP_NAME: ${{ secrets.REACT_APP_CASDOOR_SDK_APP_NAME }}
  REACT_APP_CASDOOR_SDK_ORGANIZATION_NAME: ${{ secrets.REACT_APP_CASDOOR_SDK_ORGANIZATION_NAME }}
  REACT_APP_CASDOOR_SDK_REDIRECT_PATH: ${{ secrets.REACT_APP_CASDOOR_SDK_REDIRECT_PATH }}
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

jobs:
  style:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18.19.0

      - name: Supprimer .npmrc global (si présent)
        run: rm -f ~/.npmrc

      - name: Supprimer .npmrc local (si présent)
        run: rm -f .npmrc

      - name: Configure AWS credentials (prod)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.PROD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.REACT_APP_AWS_REGION }}

      - run: sh ./initNpmrc.sh hei-store npm-hei-school 088312068315

      - name: Configure AWS credentials (preprod)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.PREPROD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.PREPROD_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.REACT_APP_AWS_REGION }}
          unset-current-credentials: true

      - run: sh ./initNpmrc.sh hei-store npm-hei-lab 057045785189

      - run: npm ci
      - run: npm run format:check

  test-e2e:
    timeout-minutes: 35
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: 18.19.0

      - uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Supprimer .npmrc global (si présent)
        run: rm -f ~/.npmrc

      - name: Supprimer .npmrc local (si présent)
        run: rm -f .npmrc

      - name: Configurer AWS + npmrc (prod puis preprod)
        run: |
          aws configure set aws_access_key_id ${{ secrets.PROD_AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}
          aws configure set region ${{ env.REACT_APP_AWS_REGION }}
          sh ./initNpmrc.sh hei-store npm-hei-school 088312068315
          aws configure set aws_access_key_id ${{ secrets.PREPROD_AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.PREPROD_AWS_SECRET_ACCESS_KEY }}
          sh ./initNpmrc.sh hei-store npm-hei-lab 057045785189

      - run: npm install --location=global sonar-scanner
      - run: npm install --save-dev ts-node typescript

      - name: Read version
        id: read-version
        uses: CumulusDS/get-yaml-paths-action@v0.1.0
        with:
          file: version.yml
          version: version

      - name: Run Cypress tests on preprod
        env:
          CYPRESS_INSTATUS_API_KEY: ${{secrets.INSTATUS_API_KEY}}
          CYPRESS_INSTATUS_API_URL: ${{secrets.INSTATUS_API_URL}}
          CYPRESS_INSTATUS_PAGE_ID: ${{ secrets.INSTATUS_PAGE_ID }}

          CYPRESS_INSTATUS_AUTH_COMPONENT_ID: ${{ secrets.INSTATUS_AUTH_COMPONENT_ID}}
          CYPRESS_INSTATUS_PAYMENT_COMPONENT_ID: ${{ secrets.INSTATUS_PAYMENT_COMPONENT_ID}}
          CYPRESS_INSTATUS_ETUDIANT_COMPONENT_ID: ${{ secrets.INSTATUS_ETUDIANT_COMPONENT_ID}}
          CYPRESS_INSTATUS_PRESENCE_COMPONENT_ID: ${{ secrets.INSTATUS_PRESENCE_COMPONENT_ID}}

          CYPRESS_INSTATUS_PAYMENT_WEBHOOK: ${{ secrets.INSTATUS_PAYMENT_WEBHOOK }}
          CYPRESS_INSTATUS_AUTH_WEBHOOK: ${{ secrets.INSTATUS_AUTH_WEBHOOK }}
          CYPRESS_INSTATUS_ETUDIANT_WEBHOOK: ${{ secrets.INSTATUS_ETUDIANT_WEBHOOK }}
          CYPRESS_INSTATUS_PRESENCE_WEBHOOK: ${{ secrets.INSTATUS_PRESENCE_WEBHOOK }}

          CYPRESS_ADMIN1_EMAIL: ${{secrets.ADMIN1_EMAIL}}
          CYPRESS_MONITOR1_EMAIL: ${{secrets.MONITOR1_EMAIL}}
          CYPRESS_TEACHER1_EMAIL: ${{secrets.TEACHER1_EMAIL}}
          CYPRESS_STUDENT1_EMAIL: ${{secrets.STUDENT1_EMAIL}}
          CYPRESS_MANAGER1_EMAIL: ${{secrets.MANAGER1_EMAIL}}

          CYPRESS_STUDENT1_PASSWORD: ${{secrets.STUDENT1_PASSWORD}}
          CYPRESS_MANAGER1_PASSWORD: ${{secrets.MANAGER1_PASSWORD}}
          CYPRESS_MONITOR1_PASSWORD: ${{secrets.MONITOR1_PASSWORD}}
          CYPRESS_TEACHER1_PASSWORD: ${{secrets.TEACHER1_PASSWORD}}
          CYPRESS_ADMIN1_PASSWORD: ${{secrets.ADMIN1_PASSWORD}}
          CYPRESS_BASE_URL: https://preprod.admin.hei.school
        uses: cypress-io/github-action@v6
        with:
          command: npx cypress run --e2e --env codeCoverage=true
          video: false

      - name: Upload Cypress screenshots
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-screenshots
          path: cypress/screenshots/
          retention-days: 1

      - name: SonarQube Analysis
        if: always()
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN_FOR_CONVENTIONAL_CHANGELOG }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          npx nyc report --reporter=lcov
          npm run test:merge:reports
          sonar-scanner \
            -Dsonar.projectVersion=${{ steps.read-version.outputs.version }} \
            -Dsonar.organization=hei-school \
            -Dsonar.projectKey=hei_admin-ui \
            -Dsonar.branch.name=${{ github.ref_name }} \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=$SONAR_TOKEN \
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info

      - name: Instatus update (DOWN if failure)
        if: failure()
        env:
          INSTATUS_PAYMENT_WEBHOOK: ${{ secrets.INSTATUS_PAYMENT_WEBHOOK }}
          INSTATUS_AUTH_WEBHOOK: ${{ secrets.INSTATUS_AUTH_WEBHOOK }}
          INSTATUS_PRESENCE_WEBHOOK: ${{ secrets.INSTATUS_PRESENCE_WEBHOOK }}
          INSTATUS_ETUDIANT_WEBHOOK: ${{ secrets.INSTATUS_ETUDIANT_WEBHOOK }}
        run: |
          for service in "Payment" "Auth" "Presence" "Etudiant"; do
            webhook_var="INSTATUS_${service^^}_WEBHOOK"
            echo "Updating $service status to DOWN..."
            response=$(curl -s -w "\n%{http_code}" -X POST "${!webhook_var}" \
              -H 'Content-Type: application/json' \
              -d '{"trigger": "down"}')
            
            http_code=$(echo "$response" | tail -n1)
            body=$(echo "$response" | head -n -1)
            
            if [ "$http_code" -eq 200 ]; then
              echo "Success: $body"
            else
              echo "Failed to update $service (HTTP $http_code): $body"
            fi
          done

      - name: Instatus update (UP)
        if: success()
        env:
          INSTATUS_PAYMENT_WEBHOOK: ${{ secrets.INSTATUS_PAYMENT_WEBHOOK }}
          INSTATUS_AUTH_WEBHOOK: ${{ secrets.INSTATUS_AUTH_WEBHOOK }}
          INSTATUS_PRESENCE_WEBHOOK: ${{ secrets.INSTATUS_PRESENCE_WEBHOOK }}
          INSTATUS_ETUDIANT_WEBHOOK: ${{ secrets.INSTATUS_ETUDIANT_WEBHOOK }}
        run: |
          for service in "Payment" "Auth" "Presence" "Etudiant"; do
            webhook_var="INSTATUS_${service^^}_WEBHOOK"
            echo "Updating $service status to UP..."
            response=$(curl -s -w "\n%{http_code}" -X POST "${!webhook_var}" \
              -H 'Content-Type: application/json' \
              -d '{"trigger": "up"}')
            
            http_code=$(echo "$response" | tail -n1)
            body=$(echo "$response" | head -n -1)
            
            if [ "$http_code" -eq 200 ]; then
              echo "Success: $body"
            else
              echo "Failed to update $service (HTTP $http_code): $body"
            fi
          done

  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18.19.0

      - name: Nettoyer node_modules et cache
        run: |
          rm -rf node_modules
          npm cache clean --force

      - name: Configure prod AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.PROD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.REACT_APP_AWS_REGION }}

      - run: sh ./initNpmrc.sh hei-store npm-hei-school 088312068315

      - name: Configure preprod AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.PREPROD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.PREPROD_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.REACT_APP_AWS_REGION }}
          unset-current-credentials: true

      - run: sh ./initNpmrc.sh hei-store npm-hei-lab 057045785189

      - name: Installer les dépendances et builder avec plus de mémoire
        run: |
          npm ci
          NODE_OPTIONS="--max-old-space-size=4096" npm run build

  cleanup-preprod-data:
    if: github.ref_name == 'main'
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Call cleanup endpoint
        run: |
          curl -X POST https://preprod.admin.hei.school/api/cleanup \
            -H "Authorization: Bearer ${{ secrets.PREPROD_CLEANUP_TOKEN }}" \
            -H "Content-Type: application/json"
